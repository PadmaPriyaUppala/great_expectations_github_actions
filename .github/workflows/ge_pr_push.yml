# Automatically Runs Great Expectation Checkpoints.
name: Great Expectations
on:
  push:
    branches:
      - main

jobs:
  great_expectations_validation:
    runs-on: ubuntu-latest
    steps:

      # Clone the contents of the repository
    - name: Copy Repository contents
      uses: actions/checkout@main
    
    - name: Set up python
      uses: actions/setup-python@v3

      # Run Great Expectations and deploy Data Docs to Netlify
      # In this example, we have configured a Checkpoint called "locations.rds.chk".
    - name: Run Great Expectation Checkpoints
      id: ge
      # Use @v0.x instead of @main to pin to a specific version, e.g. @v0.2
      uses: great-expectations/great_expectations_action@main
      with:
        CHECKPOINTS: "puppala_chkpt_taxi" # This can be a comma-separated list of Checkpoints

      # Comment on PR with link to deployed Data Docs if there is a failed Checkpoint, otherwise don't comment.
    - name: Comment on PR 
      if: ${{ always() }}
      uses: actions/github-script@v2
      with:
        github-token: ${{ secrets.TOKEN }}
        script:
            if (process.env.FAILURE_FLAG == 1 ) {
              msg = `Failed Great Expectations Checkpoint(s) detected for: ${process.env.SHA}.  Corresponding Data Docs have been generated and can be viewed.`;
              console.log(${process.env.DOCS_LOCATION})
              console.log(${process.env.FAILED_CHECKPOINTS})
            }else {
              msg = `All Checkpoints for: ${process.env.SHA} have passed.  Corresponding Data Docs have been generated and can be viewed.`;
              console.log(${process.env.DOCS_LOCATION})
              console.log(${process.env.PASSED_CHECKPOINTS})
            }
            console.log(`Message to be emitted: ${msg}`);
            github.issues.createComment({
                 issue_number: context.issue.number,
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 body: msg 
            });
		
      env:
        DOCS_LOCATION: ${{ steps.ge.outputs.action_docs_location }}
        FAILED_CHECKPOINTS: ${{ steps.ge.outputs.failing_checkpoints }}
	PASSED_CHECKPOINTS: ${{ steps.ge.outputs.passing_checkpoints }}
        SHA: ${{ github.sha }}
        FAILURE_FLAG: ${{ steps.ge.outputs.checkpoint_failure_flag }}
